// Generated by view binder compiler. Do not edit!
package com.example.suits_lb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.suits_lb.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SingleAdminViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView adminAgeData;

  @NonNull
  public final TextView adminEmailData;

  @NonNull
  public final TextView adminNameData;

  @NonNull
  public final TextView adminPhoneData;

  @NonNull
  public final TextView infoAgeAdmin;

  @NonNull
  public final TextView infoEmailAdmin;

  @NonNull
  public final TextView infoNameAdmin;

  @NonNull
  public final TextView infoPhoneAdmin;

  private SingleAdminViewBinding(@NonNull LinearLayout rootView, @NonNull TextView adminAgeData,
      @NonNull TextView adminEmailData, @NonNull TextView adminNameData,
      @NonNull TextView adminPhoneData, @NonNull TextView infoAgeAdmin,
      @NonNull TextView infoEmailAdmin, @NonNull TextView infoNameAdmin,
      @NonNull TextView infoPhoneAdmin) {
    this.rootView = rootView;
    this.adminAgeData = adminAgeData;
    this.adminEmailData = adminEmailData;
    this.adminNameData = adminNameData;
    this.adminPhoneData = adminPhoneData;
    this.infoAgeAdmin = infoAgeAdmin;
    this.infoEmailAdmin = infoEmailAdmin;
    this.infoNameAdmin = infoNameAdmin;
    this.infoPhoneAdmin = infoPhoneAdmin;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SingleAdminViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SingleAdminViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.single_admin_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SingleAdminViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adminAgeData;
      TextView adminAgeData = ViewBindings.findChildViewById(rootView, id);
      if (adminAgeData == null) {
        break missingId;
      }

      id = R.id.adminEmailData;
      TextView adminEmailData = ViewBindings.findChildViewById(rootView, id);
      if (adminEmailData == null) {
        break missingId;
      }

      id = R.id.adminNameData;
      TextView adminNameData = ViewBindings.findChildViewById(rootView, id);
      if (adminNameData == null) {
        break missingId;
      }

      id = R.id.adminPhoneData;
      TextView adminPhoneData = ViewBindings.findChildViewById(rootView, id);
      if (adminPhoneData == null) {
        break missingId;
      }

      id = R.id.infoAgeAdmin;
      TextView infoAgeAdmin = ViewBindings.findChildViewById(rootView, id);
      if (infoAgeAdmin == null) {
        break missingId;
      }

      id = R.id.infoEmailAdmin;
      TextView infoEmailAdmin = ViewBindings.findChildViewById(rootView, id);
      if (infoEmailAdmin == null) {
        break missingId;
      }

      id = R.id.infoNameAdmin;
      TextView infoNameAdmin = ViewBindings.findChildViewById(rootView, id);
      if (infoNameAdmin == null) {
        break missingId;
      }

      id = R.id.infoPhoneAdmin;
      TextView infoPhoneAdmin = ViewBindings.findChildViewById(rootView, id);
      if (infoPhoneAdmin == null) {
        break missingId;
      }

      return new SingleAdminViewBinding((LinearLayout) rootView, adminAgeData, adminEmailData,
          adminNameData, adminPhoneData, infoAgeAdmin, infoEmailAdmin, infoNameAdmin,
          infoPhoneAdmin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
