// Generated by view binder compiler. Do not edit!
package com.example.suits_lb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.suits_lb.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignInPageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btCancelSignIn;

  @NonNull
  public final Button btSignIn;

  @NonNull
  public final LinearLayout cabeceraLogIn;

  @NonNull
  public final TextView cabeceraLogin;

  @NonNull
  public final CheckBox cbPrivacyPolitics;

  @NonNull
  public final EditText edtEmailUserSignIn;

  @NonNull
  public final EditText edtPhoneUserSignInPage;

  @NonNull
  public final EditText edtSignInNameUser;

  @NonNull
  public final EditText edtUserAgeSignIn;

  @NonNull
  public final EditText edtUserPasswordSignIn;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView tvwEmailUser;

  @NonNull
  public final TextView tvwGoToPrivacyPolitics;

  @NonNull
  public final TextView tvwNameUser;

  @NonNull
  public final TextView tvwPasswordUser;

  @NonNull
  public final TextView tvwPhoneUser;

  @NonNull
  public final TextView tvwUserAge;

  private ActivitySignInPageBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btCancelSignIn, @NonNull Button btSignIn, @NonNull LinearLayout cabeceraLogIn,
      @NonNull TextView cabeceraLogin, @NonNull CheckBox cbPrivacyPolitics,
      @NonNull EditText edtEmailUserSignIn, @NonNull EditText edtPhoneUserSignInPage,
      @NonNull EditText edtSignInNameUser, @NonNull EditText edtUserAgeSignIn,
      @NonNull EditText edtUserPasswordSignIn, @NonNull ConstraintLayout main,
      @NonNull TextView tvwEmailUser, @NonNull TextView tvwGoToPrivacyPolitics,
      @NonNull TextView tvwNameUser, @NonNull TextView tvwPasswordUser,
      @NonNull TextView tvwPhoneUser, @NonNull TextView tvwUserAge) {
    this.rootView = rootView;
    this.btCancelSignIn = btCancelSignIn;
    this.btSignIn = btSignIn;
    this.cabeceraLogIn = cabeceraLogIn;
    this.cabeceraLogin = cabeceraLogin;
    this.cbPrivacyPolitics = cbPrivacyPolitics;
    this.edtEmailUserSignIn = edtEmailUserSignIn;
    this.edtPhoneUserSignInPage = edtPhoneUserSignInPage;
    this.edtSignInNameUser = edtSignInNameUser;
    this.edtUserAgeSignIn = edtUserAgeSignIn;
    this.edtUserPasswordSignIn = edtUserPasswordSignIn;
    this.main = main;
    this.tvwEmailUser = tvwEmailUser;
    this.tvwGoToPrivacyPolitics = tvwGoToPrivacyPolitics;
    this.tvwNameUser = tvwNameUser;
    this.tvwPasswordUser = tvwPasswordUser;
    this.tvwPhoneUser = tvwPhoneUser;
    this.tvwUserAge = tvwUserAge;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignInPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignInPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sign_in_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignInPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btCancelSignIn;
      Button btCancelSignIn = ViewBindings.findChildViewById(rootView, id);
      if (btCancelSignIn == null) {
        break missingId;
      }

      id = R.id.btSignIn;
      Button btSignIn = ViewBindings.findChildViewById(rootView, id);
      if (btSignIn == null) {
        break missingId;
      }

      id = R.id.cabeceraLogIn;
      LinearLayout cabeceraLogIn = ViewBindings.findChildViewById(rootView, id);
      if (cabeceraLogIn == null) {
        break missingId;
      }

      id = R.id.cabeceraLogin;
      TextView cabeceraLogin = ViewBindings.findChildViewById(rootView, id);
      if (cabeceraLogin == null) {
        break missingId;
      }

      id = R.id.cbPrivacyPolitics;
      CheckBox cbPrivacyPolitics = ViewBindings.findChildViewById(rootView, id);
      if (cbPrivacyPolitics == null) {
        break missingId;
      }

      id = R.id.edtEmailUserSignIn;
      EditText edtEmailUserSignIn = ViewBindings.findChildViewById(rootView, id);
      if (edtEmailUserSignIn == null) {
        break missingId;
      }

      id = R.id.edtPhoneUserSignInPage;
      EditText edtPhoneUserSignInPage = ViewBindings.findChildViewById(rootView, id);
      if (edtPhoneUserSignInPage == null) {
        break missingId;
      }

      id = R.id.edtSignInNameUser;
      EditText edtSignInNameUser = ViewBindings.findChildViewById(rootView, id);
      if (edtSignInNameUser == null) {
        break missingId;
      }

      id = R.id.edtUserAgeSignIn;
      EditText edtUserAgeSignIn = ViewBindings.findChildViewById(rootView, id);
      if (edtUserAgeSignIn == null) {
        break missingId;
      }

      id = R.id.edtUserPasswordSignIn;
      EditText edtUserPasswordSignIn = ViewBindings.findChildViewById(rootView, id);
      if (edtUserPasswordSignIn == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.tvwEmailUser;
      TextView tvwEmailUser = ViewBindings.findChildViewById(rootView, id);
      if (tvwEmailUser == null) {
        break missingId;
      }

      id = R.id.tvwGoToPrivacyPolitics;
      TextView tvwGoToPrivacyPolitics = ViewBindings.findChildViewById(rootView, id);
      if (tvwGoToPrivacyPolitics == null) {
        break missingId;
      }

      id = R.id.tvwNameUser;
      TextView tvwNameUser = ViewBindings.findChildViewById(rootView, id);
      if (tvwNameUser == null) {
        break missingId;
      }

      id = R.id.tvwPasswordUser;
      TextView tvwPasswordUser = ViewBindings.findChildViewById(rootView, id);
      if (tvwPasswordUser == null) {
        break missingId;
      }

      id = R.id.tvwPhoneUser;
      TextView tvwPhoneUser = ViewBindings.findChildViewById(rootView, id);
      if (tvwPhoneUser == null) {
        break missingId;
      }

      id = R.id.tvwUserAge;
      TextView tvwUserAge = ViewBindings.findChildViewById(rootView, id);
      if (tvwUserAge == null) {
        break missingId;
      }

      return new ActivitySignInPageBinding((ConstraintLayout) rootView, btCancelSignIn, btSignIn,
          cabeceraLogIn, cabeceraLogin, cbPrivacyPolitics, edtEmailUserSignIn,
          edtPhoneUserSignInPage, edtSignInNameUser, edtUserAgeSignIn, edtUserPasswordSignIn, main,
          tvwEmailUser, tvwGoToPrivacyPolitics, tvwNameUser, tvwPasswordUser, tvwPhoneUser,
          tvwUserAge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
