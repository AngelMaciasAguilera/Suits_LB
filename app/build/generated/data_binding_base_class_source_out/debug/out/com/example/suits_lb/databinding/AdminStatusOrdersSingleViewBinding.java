// Generated by view binder compiler. Do not edit!
package com.example.suits_lb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.suits_lb.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminStatusOrdersSingleViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView infoOrderConcept;

  @NonNull
  public final TextView infoOrderQuantity;

  @NonNull
  public final TextView infoOrderStatus;

  @NonNull
  public final TextView infoOrderSubtotal;

  @NonNull
  public final TextView numOrderAOV;

  @NonNull
  public final TextView orderConceptAOV;

  @NonNull
  public final TextView orderStatusAOV;

  @NonNull
  public final TextView orderUserEmailAOV;

  private AdminStatusOrdersSingleViewBinding(@NonNull LinearLayout rootView,
      @NonNull TextView infoOrderConcept, @NonNull TextView infoOrderQuantity,
      @NonNull TextView infoOrderStatus, @NonNull TextView infoOrderSubtotal,
      @NonNull TextView numOrderAOV, @NonNull TextView orderConceptAOV,
      @NonNull TextView orderStatusAOV, @NonNull TextView orderUserEmailAOV) {
    this.rootView = rootView;
    this.infoOrderConcept = infoOrderConcept;
    this.infoOrderQuantity = infoOrderQuantity;
    this.infoOrderStatus = infoOrderStatus;
    this.infoOrderSubtotal = infoOrderSubtotal;
    this.numOrderAOV = numOrderAOV;
    this.orderConceptAOV = orderConceptAOV;
    this.orderStatusAOV = orderStatusAOV;
    this.orderUserEmailAOV = orderUserEmailAOV;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminStatusOrdersSingleViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminStatusOrdersSingleViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_status_orders_single_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminStatusOrdersSingleViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.infoOrderConcept;
      TextView infoOrderConcept = ViewBindings.findChildViewById(rootView, id);
      if (infoOrderConcept == null) {
        break missingId;
      }

      id = R.id.infoOrderQuantity;
      TextView infoOrderQuantity = ViewBindings.findChildViewById(rootView, id);
      if (infoOrderQuantity == null) {
        break missingId;
      }

      id = R.id.infoOrderStatus;
      TextView infoOrderStatus = ViewBindings.findChildViewById(rootView, id);
      if (infoOrderStatus == null) {
        break missingId;
      }

      id = R.id.infoOrderSubtotal;
      TextView infoOrderSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (infoOrderSubtotal == null) {
        break missingId;
      }

      id = R.id.numOrderAOV;
      TextView numOrderAOV = ViewBindings.findChildViewById(rootView, id);
      if (numOrderAOV == null) {
        break missingId;
      }

      id = R.id.orderConceptAOV;
      TextView orderConceptAOV = ViewBindings.findChildViewById(rootView, id);
      if (orderConceptAOV == null) {
        break missingId;
      }

      id = R.id.orderStatusAOV;
      TextView orderStatusAOV = ViewBindings.findChildViewById(rootView, id);
      if (orderStatusAOV == null) {
        break missingId;
      }

      id = R.id.orderUserEmailAOV;
      TextView orderUserEmailAOV = ViewBindings.findChildViewById(rootView, id);
      if (orderUserEmailAOV == null) {
        break missingId;
      }

      return new AdminStatusOrdersSingleViewBinding((LinearLayout) rootView, infoOrderConcept,
          infoOrderQuantity, infoOrderStatus, infoOrderSubtotal, numOrderAOV, orderConceptAOV,
          orderStatusAOV, orderUserEmailAOV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
