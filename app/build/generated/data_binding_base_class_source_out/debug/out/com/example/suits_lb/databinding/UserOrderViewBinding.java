// Generated by view binder compiler. Do not edit!
package com.example.suits_lb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.suits_lb.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserOrderViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView infoDateEstimateOrder;

  @NonNull
  public final TextView infoOrderConcept;

  @NonNull
  public final TextView infoOrderDirection;

  @NonNull
  public final TextView infoOrderQuantity;

  @NonNull
  public final TextView infoOrderSubtotal;

  @NonNull
  public final TextView orderConcept;

  @NonNull
  public final TextView orderDateEstimate;

  @NonNull
  public final TextView orderDirection;

  @NonNull
  public final TextView orderQuantity;

  @NonNull
  public final TextView orderSubtotal;

  private UserOrderViewBinding(@NonNull LinearLayout rootView,
      @NonNull TextView infoDateEstimateOrder, @NonNull TextView infoOrderConcept,
      @NonNull TextView infoOrderDirection, @NonNull TextView infoOrderQuantity,
      @NonNull TextView infoOrderSubtotal, @NonNull TextView orderConcept,
      @NonNull TextView orderDateEstimate, @NonNull TextView orderDirection,
      @NonNull TextView orderQuantity, @NonNull TextView orderSubtotal) {
    this.rootView = rootView;
    this.infoDateEstimateOrder = infoDateEstimateOrder;
    this.infoOrderConcept = infoOrderConcept;
    this.infoOrderDirection = infoOrderDirection;
    this.infoOrderQuantity = infoOrderQuantity;
    this.infoOrderSubtotal = infoOrderSubtotal;
    this.orderConcept = orderConcept;
    this.orderDateEstimate = orderDateEstimate;
    this.orderDirection = orderDirection;
    this.orderQuantity = orderQuantity;
    this.orderSubtotal = orderSubtotal;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserOrderViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserOrderViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_order_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserOrderViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.infoDateEstimateOrder;
      TextView infoDateEstimateOrder = ViewBindings.findChildViewById(rootView, id);
      if (infoDateEstimateOrder == null) {
        break missingId;
      }

      id = R.id.infoOrderConcept;
      TextView infoOrderConcept = ViewBindings.findChildViewById(rootView, id);
      if (infoOrderConcept == null) {
        break missingId;
      }

      id = R.id.infoOrderDirection;
      TextView infoOrderDirection = ViewBindings.findChildViewById(rootView, id);
      if (infoOrderDirection == null) {
        break missingId;
      }

      id = R.id.infoOrderQuantity;
      TextView infoOrderQuantity = ViewBindings.findChildViewById(rootView, id);
      if (infoOrderQuantity == null) {
        break missingId;
      }

      id = R.id.infoOrderSubtotal;
      TextView infoOrderSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (infoOrderSubtotal == null) {
        break missingId;
      }

      id = R.id.orderConcept;
      TextView orderConcept = ViewBindings.findChildViewById(rootView, id);
      if (orderConcept == null) {
        break missingId;
      }

      id = R.id.orderDateEstimate;
      TextView orderDateEstimate = ViewBindings.findChildViewById(rootView, id);
      if (orderDateEstimate == null) {
        break missingId;
      }

      id = R.id.orderDirection;
      TextView orderDirection = ViewBindings.findChildViewById(rootView, id);
      if (orderDirection == null) {
        break missingId;
      }

      id = R.id.orderQuantity;
      TextView orderQuantity = ViewBindings.findChildViewById(rootView, id);
      if (orderQuantity == null) {
        break missingId;
      }

      id = R.id.orderSubtotal;
      TextView orderSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (orderSubtotal == null) {
        break missingId;
      }

      return new UserOrderViewBinding((LinearLayout) rootView, infoDateEstimateOrder,
          infoOrderConcept, infoOrderDirection, infoOrderQuantity, infoOrderSubtotal, orderConcept,
          orderDateEstimate, orderDirection, orderQuantity, orderSubtotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
