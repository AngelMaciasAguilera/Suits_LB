// Generated by view binder compiler. Do not edit!
package com.example.suits_lb.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.suits_lb.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SingleUserViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView infoAgeUser;

  @NonNull
  public final TextView infoEmailUser;

  @NonNull
  public final TextView infoNameUser;

  @NonNull
  public final TextView infoPhoneUser;

  @NonNull
  public final TextView userAgeData;

  @NonNull
  public final TextView userEmailData;

  @NonNull
  public final TextView userNameData;

  @NonNull
  public final TextView userPhoneData;

  private SingleUserViewBinding(@NonNull LinearLayout rootView, @NonNull TextView infoAgeUser,
      @NonNull TextView infoEmailUser, @NonNull TextView infoNameUser,
      @NonNull TextView infoPhoneUser, @NonNull TextView userAgeData,
      @NonNull TextView userEmailData, @NonNull TextView userNameData,
      @NonNull TextView userPhoneData) {
    this.rootView = rootView;
    this.infoAgeUser = infoAgeUser;
    this.infoEmailUser = infoEmailUser;
    this.infoNameUser = infoNameUser;
    this.infoPhoneUser = infoPhoneUser;
    this.userAgeData = userAgeData;
    this.userEmailData = userEmailData;
    this.userNameData = userNameData;
    this.userPhoneData = userPhoneData;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SingleUserViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SingleUserViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.single_user_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SingleUserViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.infoAgeUser;
      TextView infoAgeUser = ViewBindings.findChildViewById(rootView, id);
      if (infoAgeUser == null) {
        break missingId;
      }

      id = R.id.infoEmailUser;
      TextView infoEmailUser = ViewBindings.findChildViewById(rootView, id);
      if (infoEmailUser == null) {
        break missingId;
      }

      id = R.id.infoNameUser;
      TextView infoNameUser = ViewBindings.findChildViewById(rootView, id);
      if (infoNameUser == null) {
        break missingId;
      }

      id = R.id.infoPhoneUser;
      TextView infoPhoneUser = ViewBindings.findChildViewById(rootView, id);
      if (infoPhoneUser == null) {
        break missingId;
      }

      id = R.id.userAgeData;
      TextView userAgeData = ViewBindings.findChildViewById(rootView, id);
      if (userAgeData == null) {
        break missingId;
      }

      id = R.id.userEmailData;
      TextView userEmailData = ViewBindings.findChildViewById(rootView, id);
      if (userEmailData == null) {
        break missingId;
      }

      id = R.id.userNameData;
      TextView userNameData = ViewBindings.findChildViewById(rootView, id);
      if (userNameData == null) {
        break missingId;
      }

      id = R.id.userPhoneData;
      TextView userPhoneData = ViewBindings.findChildViewById(rootView, id);
      if (userPhoneData == null) {
        break missingId;
      }

      return new SingleUserViewBinding((LinearLayout) rootView, infoAgeUser, infoEmailUser,
          infoNameUser, infoPhoneUser, userAgeData, userEmailData, userNameData, userPhoneData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
